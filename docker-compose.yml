services:
  app:
    build: .
    container_name: app
    command: ["./app", "-port", "8080", "-app", "app-single"]
    ports:
      - "8080:8080"
    expose:
      - "8080"
    depends_on:
      - grafana
      - postgres

  app1:
    build: .
    container_name: app1
    command: ["./app", "-port", "8081", "-app", "app1"]
    expose:
      - "8081"
    depends_on:
      - grafana
      - postgres

  app2:
    build: .
    container_name: app2
    command: ["./app", "-port", "8082", "-app", "app2"]
    expose:
      - "8082"
    depends_on:
      - grafana
      - postgres

  app3:
    build: .
    container_name: app3
    command: ["./app", "-port", "8083", "-app", "app3"]
    expose:
      - "8083"
    depends_on:
      - grafana
      - postgres

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "8080:80"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
    depends_on:
      - app1
      - app2
      - app3

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    depends_on:
      - prometheus
    restart: unless-stopped

  pushgateway:
    image: prom/pushgateway:latest
    container_name: pushgateway
    ports:
      - "9091:9091"
    depends_on:
      - prometheus
    restart: unless-stopped

  job:
    build:
      context: .
      dockerfile: Dockerfile.job
    container_name: job
    depends_on:
      - pushgateway
    restart: unless-stopped

  postgres:
    image: postgres:latest
    container_name: postgres
    environment:
      POSTGRES_DB: payments
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgres
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:
  postgres_data:
